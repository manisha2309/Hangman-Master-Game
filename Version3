import tkinter as tk
from tkinter import messagebox
import random
from colorama import init, Fore, Style

init(autoreset=True)

class HangmanGUI:
    def __init__(self, master):
        self.master = master
        self.master.title("Hangman Game")
        self.master.geometry("600x400")
        
        self.words = ["apple", "banana", "orange", "grape", "strawberry", "melon", "pineapple"]
        self.word = random.choice(self.words)
        self.guessed_letters = []
        self.attempts_left = 6
        
        self.setup_ui()

    def setup_ui(self):
        self.canvas = tk.Canvas(self.master, width=400, height=300)
        self.canvas.pack()

        self.canvas.create_line(200, 50, 200, 100, width=3)  # scaffold
        self.canvas.create_line(200, 50, 300, 50, width=3)
        self.canvas.create_line(300, 50, 300, 100, width=3)
        self.canvas.create_line(250, 100, 250, 250, width=3)  # pole
        self.canvas.create_line(200, 250, 300, 250, width=3)  # base

        self.label_word = tk.Label(self.master, text=self.display_word(), font=("Arial", 20))
        self.label_word.pack()

        self.label_attempts = tk.Label(self.master, text="Attempts left: " + str(self.attempts_left), font=("Arial", 12))
        self.label_attempts.pack()

        self.entry_guess = tk.Entry(self.master, font=("Arial", 12))
        self.entry_guess.pack()

        self.btn_guess = tk.Button(self.master, text="Guess", command=self.guess_letter)
        self.btn_guess.pack()

    def display_word(self):
        displayed_word = ""
        for letter in self.word:
            if letter in self.guessed_letters:
                displayed_word += letter
            else:
                displayed_word += "_ "
        return displayed_word

    def draw_hangman(self):
        if self.attempts_left == 5:  # head
            self.canvas.create_oval(230, 100, 270, 140, width=3)
        elif self.attempts_left == 4:  # body
            self.canvas.create_line(250, 140, 250, 200, width=3)
        elif self.attempts_left == 3:  # left arm
            self.canvas.create_line(250, 150, 220, 170, width=3)
        elif self.attempts_left == 2:  # right arm
            self.canvas.create_line(250, 150, 280, 170, width=3)
        elif self.attempts_left == 1:  # left leg
            self.canvas.create_line(250, 200, 230, 240, width=3)
        elif self.attempts_left == 0:  # right leg
            self.canvas.create_line(250, 200, 270, 240, width=3)

    def guess_letter(self):
        guess = self.entry_guess.get().lower()
        self.entry_guess.delete(0, tk.END)

        if guess in self.guessed_letters:
            messagebox.showinfo("Hangman", "You've already guessed that letter!")
            return

        self.guessed_letters.append(guess)
        self.label_word.config(text=self.display_word())

        if guess not in self.word:
            self.attempts_left -= 1
            self.label_attempts.config(text="Attempts left: " + str(self.attempts_left))
            self.draw_hangman()

            if self.attempts_left == 0:
                messagebox.showinfo("Hangman", "Sorry, you ran out of attempts. The word was: " + self.word)
                self.master.destroy()
                return
        else:
            if "_" not in self.display_word():
                messagebox.showinfo("Hangman", "Congratulations! You guessed the word: " + self.word)
                self.master.destroy()

def main():
    root = tk.Tk()
    hangman_game = HangmanGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
